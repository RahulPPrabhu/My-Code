{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\React-Task\\\\my-task\\\\src\\\\components\\\\Task3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Task3A from './Task3A';\nimport Task3B from './Task3B';\n\n// conditional Rendering\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Task3() {\n  _s();\n  const [isSubscribed, setSubscribed] = useState(false);\n  const [isUnsubscribed, setUnSubsribed] = useState(truq);\n\n  // Cause Side Effect\n  useEffect(() => {\n    console.log(\"Is Subscribed: \" + isSubscribed);\n  }, [isSubscribed]);\n  const handleSubscribe = () => {\n    setSubscribed(true);\n  };\n  const handleUnSubscribe = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isSubscribed ? /*#__PURE__*/_jsxDEV(Task3A, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Task3B, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubscribe,\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUnSubscribe,\n      children: \"UnSubscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Task3, \"oqgUJhJQmtynTzShambHkI5+XSY=\");\n_c = Task3;\nexport default Task3;\nvar _c;\n$RefreshReg$(_c, \"Task3\");","map":{"version":3,"names":["React","useState","useEffect","Task3A","Task3B","jsxDEV","_jsxDEV","Fragment","_Fragment","Task3","_s","isSubscribed","setSubscribed","isUnsubscribed","setUnSubsribed","truq","console","log","handleSubscribe","handleUnSubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/code/React-Task/my-task/src/components/Task3.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Task3A from './Task3A'\r\nimport Task3B from './Task3B'\r\n\r\n// conditional Rendering\r\nfunction Task3() {\r\n\r\n    const [isSubscribed, setSubscribed] = useState(false)\r\n    const [isUnsubscribed, setUnSubsribed] = useState(truq)\r\n\r\n    // Cause Side Effect\r\n    useEffect(() => {\r\n        console.log(\"Is Subscribed: \" + isSubscribed)\r\n    }, [isSubscribed])\r\n    \r\n    const handleSubscribe = () => {\r\n        setSubscribed(true)\r\n    }\r\n\r\n    const handleUnSubscribe = () => {\r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n        {isSubscribed ? <Task3A /> : <Task3B />}\r\n        <button onClick={handleSubscribe}>Subscribe</button>\r\n        <button onClick={handleUnSubscribe}>UnSubscribe</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Task3"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,YAAY,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,cAAc,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACc,IAAI,CAAC;;EAEvD;EACAb,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGN,YAAY,CAAC;EACjD,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC1BN,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAAA,KAAM,CAEhC,CAAC;EAEH,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,GACKT,YAAY,gBAAGL,OAAA,CAACH,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACF,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvClB,OAAA;MAAQmB,OAAO,EAAEP,eAAgB;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDlB,OAAA;MAAQmB,OAAO,EAAEN,iBAAkB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC1D,CAAC;AAEP;AAACd,EAAA,CAzBQD,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AA2Bd,eAAeA,KAAK;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}